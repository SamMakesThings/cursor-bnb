import Head from 'next/head'
import { useState } from 'react'
import Image from 'next/image'
import InfiniteScroll from 'react-infinite-scroll-component'

import styles from '@/styles/Home.module.css'
import { ListingCard } from '@/components/ListingCard'

function generateSingleListing(seed: number) {
  return {
    name: 'Cursor house ' + seed,
    location: 'Stock photo views',
    dates: 'March 15 - 20',
    price: '$' + (seed + 3),
    images: [
      'https://source.unsplash.com/random/800x800/?img=' + (seed + 1),
      'https://source.unsplash.com/random/800x800/?img=2' + (seed + 2),
      'https://source.unsplash.com/random/800x800/?img=3' + (seed + 3),
      'https://source.unsplash.com/random/800x800/?img=4' + (seed + 4),
    ],
  }
}

function generateMultipleListings(howMany: number) {
  const listings = []
  for (let i = 0; i < howMany; i++) {
    listings.push(generateSingleListing(i))
  }
  return listings
}

export default function Home() {
  const [listings, setListings] = useState(generateMultipleListings(6))

  return (
    <>
      <Head>
        <title>Cursor BNB</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.description}>
          <p>
            Cursor bnb layout by&nbsp;
            <code className={styles.code}>Sam</code>
          </p>
          <div>
            <a
              href="https://www.youtube.com/watch?v=dQw4w9WgXcQ"
              target="_blank"
              rel="noopener noreferrer"
            >
              for Cursor
              <Image
                src="/cursorLogo.svg"
                alt="Cursor Logo"
                className={styles.vercelLogo}
                width={25}
                height={24}
                priority
              />
            </a>
          </div>
        </div>
        <div className={'w-full'}>
          <InfiniteScroll
            dataLength={listings.length}
            className={
              'grid w-full grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-6'
            }
            hasMore
            next={() => {
              setListings([...listings, ...generateMultipleListings(12)])
            }}
            loader={<h4>Loading...</h4>}
          >
            {listings.map((listing, index) => {
              return (
                <ListingCard
                  key={index}
                  name={listing.name}
                  location={listing.location}
                  dates={listing.dates}
                  price={listing.price}
                  images={listing.images}
                />
              )
            })}
          </InfiniteScroll>
        </div>
      </main>
    </>
  )
}
